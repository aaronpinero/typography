// font styles and line heights for lists
ol,
ul {
	@include calc-line-height($font-size-p,$grid-unit);
	margin-bottom:0;
	margin-top:0;
	padding-left:3*$grid-unit;
}
li {
	font-family:$serif;
	font-style:normal;
	font-weight:400;
	letter-spacing:0;
	@include calc-line-height($font-size-p,$grid-unit);
	margin-bottom:0;
	margin-top:0;
}
dl {
	@include calc-line-height($font-size-p,$grid-unit);
	margin-bottom:0;
	margin-top:0;
}
dt {
	font-family:$serif;
	font-style:normal;
	font-weight:700;
	letter-spacing:0;
	@include calc-line-height($font-size-p,$grid-unit);
	margin-bottom:0;
	margin-top:0;
}
dd {
	font-family:$serif;
	font-style:normal;
	font-weight:400;
	letter-spacing:0;
	@include calc-line-height($font-size-p,$grid-unit);
	margin:0;
	padding-left:3*$grid-unit;
}

// margins for lists
* + dl,
* + ol,
* + ul {
	margin-top:2*$grid-unit;
}
h2 + dl,
h3 + dl,
h4 + dl,
h5 + dl,
h6 + dl {
	margin-top:2*$grid-unit;
}
dl + h1,
dl + h2,
dl + h3,
dl + h4,
dl + h5,
dl + h6 {
	margin-top:3*$grid-unit;
}
h2 + ol,
h3 + ol,
h4 + ol,
h5 + ol,
h6 + ol {
	margin-top:2*$grid-unit;
}
ol + h1,
ol + h2,
ol + h3,
ol + h4,
ol + h5,
ol + h6 {
	margin-top:3*$grid-unit;
}
h2 + ul,
h3 + ul,
h4 + ul,
h5 + ul,
h6 + ul {
	margin-top:2*$grid-unit;
}
ul + h1,
ul + h2,
ul + h3,
ul + h4,
ul + h5,
ul + h6 {
	margin-top:3*$grid-unit;
}
li + li {
	margin-top:$grid-unit;
}
* + dt {
	margin-top:$grid-unit;
}

// nested lists
ol,
ul {
	ol,
	ul {
		margin-top:$grid-unit;
	}
}

// unordered list variations
ul {
	&.list-icons {
		li {
			list-style-type:none;
			position:relative;
			&:before {
				color:$color-text-light;
				font-family:$symbol;
				margin-right:$grid-unit;
				position:absolute;
				right:100%;
				top:0;
			}
		}
		&.list-icons-angle li:before {
			content:unquote("\"#{ $fa-var-angle-right }\"");
		}
		&.list-icons-caret li:before {
			content:unquote("\"#{ $fa-var-caret-right }\"");
		}
		&.list-icons-check li:before {
			content:unquote("\"#{ $fa-var-check }\"");
		}
		&.list-icons-chevron li:before {
			content:unquote("\"#{ $fa-var-chevron-right }\"");
		}
	}
	&.no-bullet {
		li {
			list-style-type:none;
		}
	}
}
ol,
ul {
	&.list-cols-2,
	&.list-cols-3 {
		@media (min-width:$break-list-cols-2) {
			columns:2;
			column-gap:3*$grid-unit;
			margin-bottom:-1*$grid-unit; // to balance out the bottom padding on the list items
			padding-right:3*$grid-unit; // to balance the left padding and make the columns centered in the body
			li {
				-webkit-column-break-inside:avoid;
				page-break-inside:avoid;
				break-inside:avoid;
				padding-bottom:$grid-unit;
			}
			li + li {
				margin-top:0;	// override of the default margin;
			}
		}
	}
	&.list-cols-3 {
		@media (min-width:$break-list-cols-3) {
			columns:3;
		}
	}
	
	// TODO: a flexbox version of this, falling back to floats by checking for flexbox with modernizer
	&.list-grid-2,
	&.list-grid-3,
	&.list-grid-4 {
		@media (min-width:$break-list-cols-2) {
			@include clearfix;
			li {
				box-sizing:border-box;
				float:left;
				padding-right:3*$grid-unit; // to balance the left padding and make the columns centered in the body
				width:50%;
				&:nth-child(2) {
					margin-top:0; // override of the default margin
				}
				&:nth-child(2n+1) {
					clear:left; // to make sure each new row begins properly even when list items are not all the same height
				}
			}
		}
	}
	&.list-grid-3,
	&.list-grid-4 {
		@media (min-width:$break-list-cols-3) {
			li {
				width:33.333%;
				&:nth-child(3) {
					margin-top:0; // override of the default margin
				}
				&:nth-child(2n+1) {
					clear:none; // override the 2 column style
				}
				&:nth-child(3n+1) {
					clear:left; // to make sure each new row begins properly even when list items are not all the same height
				}
			}
		}
	}
	&.list-grid-4 {
		@media (min-width:$break-list-cols-4) {
			li {
				width:25%;
				&:nth-child(4) {
					margin-top:0; // override of the default margin
				}
				&:nth-child(3n+1) {
					clear:none; // override the 3 column style
				}
				&:nth-child(4n+1) {
					clear:left; // to make sure each new row begins properly even when list items are not all the same height
				}
			}
		}
	}
}

// TODO: definition lists